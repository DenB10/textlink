<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://communicator/skin/" type="text/css"?>
<?xul-overlay href="chrome://textlink/content/pref/prefOverlay.xul"?>
<!DOCTYPE dialog SYSTEM "chrome://textlink/locale/">
<dialog xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
		id="textlinkPrefDialog"
		windowtype="textlink:preferences"
		title="&textlink.title;"
		buttons="accept,cancel"
		ondialogaccept="apply();"
		ondialogcancel="window.close();"
		orient="vertical"
		onload="init();">

<script type="application/x-javascript"><![CDATA[

function init()
{
	initMacLabel();

	TextLinkService.init();

	var node,
		value;
	for (var i in _elementIDs)
	{
		node  = document.getElementById(_elementIDs[i]);
		value = TextLinkService.getPref(node.getAttribute('prefstring'));

		switch (typeof value)
		{
			case 'string':
				node.value = value;
				break;
			case 'number':
				var items = node.getElementsByAttribute('value', value);
				if (items.length) node.selectedItem = items[0];
				node.value = value;
				break;
			case 'boolean':
				node.checked = value;
				break;
			default:
				break;
		}
	}


	initFindClickedPointRadio();
	onFindClickedPointRadioChanged();


	var box = document.getElementById('uninstallBox');
	try {
		const ExtensionManager = Components.classes['@mozilla.org/extensions/manager;1'].getService(Components.interfaces.nsIExtensionManager);
		var item = ExtensionManager.getItemList(ID, Components.interfaces.nsIUpdateItem.TYPE_EXTENSION, {});

		if (item && item[0] && item[0].version) {
			box.setAttribute('hidden',true);
			return;
		}
	}
	catch(e) {
	}
	box.removeAttribute('hidden',true);
}

function apply()
{
	var node,
		prefstring,
		value;
	for (var i in _elementIDs)
	{
		node       = document.getElementById(_elementIDs[i]);
		prefstring = node.getAttribute('prefstring');
		value      = TextLinkService.getPref(prefstring);
		switch (typeof value)
		{
			case 'string':
				if (node.value != value)
					TextLinkService.setPref(prefstring, String(node.value));
				break;
			case 'number':
				if (node.value != value)
					TextLinkService.setPref(prefstring, Number(node.value));
				break;
			case 'boolean':
				if (node.checked != value)
					TextLinkService.setPref(prefstring, node.checked != false);
				break;
			default:
				break;
		}
	}
	window.close();
}

]]></script>

<box id="textlinkPrefs"/>

</dialog>
